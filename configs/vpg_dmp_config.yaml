env:
    name: BoxPushingBinDense1ReplanProDMP-v0
    run_mode: sync
    num_envs: 2
    seed: 0
    plot: False

algo:
    name: vpg_dmp
    push_only: True
    grasp_only: False
    n_orientations: 1
    epsilon: 0.5
    epsilon_decay: True
    discount: 0.9
    lambda: 0.95
    clip: 0.2

training:
    epochs: 100000
    update_freq: 10
    backbone_params:
        model: unet_densenet_enc
        bilinear: False
        freeze: False
        no_depth: True
        smooth_size: 11
    critic_opt: SGD
    critic_opt_params:
        lr: 0.01
        momentum: 0.9
        weight_decay: 0.00002
    lr_scheduler:
        name: ExponentialLR
        gamma: 0.995
    loss: SmoothL1Loss
    position_neighbourhood: 1
    adv_loss: False
    batch_size: 64
    obs_size: 224
    buffer_size: 1000
    cuda: True
    save_model_freq: 10
    test_freq: 200
    test_iter: 10
    fix_position:
    optimal_critic: False

policy:
    mlp_config:
        hidden_dims: [64, 16]
        weight_init:
            name: normal
            scale: 0.0001
        normalizer_list: []  # instance_norm, layer_norm, batch_norm, dropout
        normalizer_kwargs:
            prob: 0.4
        activation: relu
    gaussian:
        min_std: 0.00001
        init_std: 1.0
    entropy_coeff: 1.0
    backbone_params:
        model: densenet
        freeze: False
    use_env_obs: False
    robot_state_config:
        fusion_method: # if empty than don't use proprioceptive robot state
        backbone_config:
            hidden_dims: [16, 32] # if empty no addition net for preprocessing proprioceptive state
            weight_init:
                name: normal
                scale: 0.0001
            normalizer_list: []
            normalizer_kwargs:
                prob: 0.4
            activation: relu
    update_iter: 30
    update_freq: 2
    opt: Adam
    opt_params:
        lr: 0.00001
        # momentum: 0.9
        weight_decay: 0.00002
    lr_scheduler:
        name: ExponentialLR
        gamma: 0.995
    observation_type: rgbd
    trust_region_layer:
        name: wasserstein # [ <empty>, base, wasserstein, kl, frobenius, papi, wasserstein_noncomm]
        params:
            mean_bound: 0.01
            cov_bound: 0.0001
            trust_region_coeff: 100
